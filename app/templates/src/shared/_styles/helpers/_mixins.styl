clearfix()
	&::after
		content: ''
		display: table
		clear: both

bps = {
    "phone":        320px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1200px,
    "desktop-wide": 1440px
}
mq($width, $type = min)
    if $width in bps
        $width: bps[$width]
        if $type == max
            $width: $width - 1px

        @media only screen and (#{$type}-width: $width)
            {block}

// if you have problem with vertical align placeholder on safari
// https://stackoverflow.com/questions/9323596/placeholder-text-is-not-vertically-centered-in-safari
font($name, $size = null, $line-height = null)

	if $size
		if $name == sarabun
			if $line-height
				font: 400 rem($size)#{"/"} lh($size, $line-height) "Sarabun", sans-serif
			else
				font: 400 rem($size) "Sarabun", sans-serif

		else if $name == sarabun-semi-bold
			if $line-height
				font: 600 rem($size)#{"/"} lh($size, $line-height) "Sarabun", sans-serif
			else
				font: 600 rem($size) "Sarabun", sans-serif

		else if $name == mukta
			if $line-height
				font: 400 rem($size)#{"/"} lh($size, $line-height) "Mukta", sans-serif
			else
				font: 400 rem($size) "Mukta", sans-serif

		else if $name == mukta-medium
			if $line-height
				font: 500 rem($size)#{"/"} lh($size, $line-height) "Mukta", sans-serif
			else
				font: 500 rem($size) "Mukta", sans-serif

		else if $name == mukta-bold
			if $line-height
				font: 700 rem($size)#{"/"} lh($size, $line-height) "Mukta", sans-serif
			else
				font: 700 rem($size) "Mukta", sans-serif

		else
			if $line-height
				font: 400 rem($size)#{"/"} lh($size, $line-height) $name
			else
				font: 700 rem($size) "Mukta", sans-serif

	else
		if $name == sarabun
			font-family: "Sarabun", sans-serif
		else if $name == mukta
			font-family: "Mukta", sans-serif
		else
			font-family: $name

pseudo($display = block, $pos = absolute, $content = '')
    content: $content
    display: $display
    position: $pos

triangle($direction, $color, $size = 6px, $position = absolute, $round = false)
    pseudo($pos = $position)
    width: 0
    height: 0
    if $round
        border-radius: 2px

    if $direction == down
        border-left: $size solid transparent
        border-right: $size solid transparent
        border-top: $size solid $color
        margin-top: 0 - round( $size / 2.5 )
    else if $direction == up
        border-left: $size solid transparent
        border-right: $size solid transparent
        border-bottom: $size solid $color
        margin-bottom: 0 - round( $size / 2.5 )
    else if $direction == right
        border-top: $size solid transparent
        border-bottom: $size solid transparent
        border-left: $size solid $color
        margin-right: -$size
    else if $direction == left
        border-top: $size solid transparent
        border-bottom: $size solid transparent
        border-right: $size solid $color
        margin-left: -$size

truncate($truncation-boundary)
    max-width: $truncation-boundary
	overflow: hidden
	text-overflow: ellipsis
    white-space: nowrap

// Define vertical, horizontal, or both position
center($position)
	position: absolute

	if $position == 'vertical'
		top: 50%
		transform: translateY(-50%)

	else if $position == 'horizontal'
		left: 50%
		transform: translate(-50%)

	else if $position == 'both'
		top: 50%
		left: 50%
		transform: translate(-50%, -50%)

background-gradient($start-color, $end-color, $orientation)
	background: $start-color

	if $orientation == 'vertical'
		background: linear-gradient(to bottom, $start-color, $end-color)
	else if $orientation == 'horizontal'
		background: linear-gradient(to right, $start-color, $end-color)
	else
		background: radial-gradient(ellipse at center, $start-color, $end-color)

font-face(font-name, font-src, font-weight = 400, font-style = normal, formats = woff2 woff truetype, local-font-name = font-name)
	@font-face
		fonts = ()
		font-family font-name
		if local
			local-name = local-font-name ? local-font-name : font-name
			push(fonts, 'local("' + local-name +'")')
		if woff2 in formats
			push(fonts, 'url("' + font-src + '.woff2") format("woff2")')
		if woff in formats
			push(fonts, 'url("' + font-src + '.woff") format("woff")')
		if truetype in formats || ttf in formats
			push(fonts, 'url("' + font-src + '.ttf") format("truetype")')
		src unquote(join(", ", fonts))
		if font-weight
			font-weight font-weight
		if font-style
			font-style font-style

/*
  This mixin can be used to set the object-fit:
  object-fit(contain);
  or object-fit and object-position:
  object-fit(cover, top);
*/
object-fit($fit = fill, $position = null)
	object-fit: $fit
	if $position
		object-position: $position;
		font-family: 'object-fit: #{$fit}; object-position: #{$position}';
	else
		font-family: 'object-fit: #{$fit}';
